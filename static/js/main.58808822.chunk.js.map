{"version":3,"sources":["component/Display.js","component/Button.js","component/ButtonPanel.js","logic/calculate.js","component/App.js","serviceWorker.js","index.js"],"names":["Display","className","this","props","value","Component","Button","handleClick","buttonName","clickHandler","name","style","width","buttonSize","onClick","backgroundColor","buttonColor","ButtonPanel","React","operations","calculateValue","item1","item2","operationValue","length","finalValue","val1","parseFloat","val2","Math","floor","parseInt","toString","isNaN","calculate","obj","total","next","operation","test","toal","includes","App","state","setState","console","log","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.58808822.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Display.css';\r\n\r\nclass Display extends Component {\r\n\r\n    static propTypes = {\r\n        value: PropTypes.string\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"output-container\">\r\n                <div>{this.props.value}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Display;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Button.css';\r\n\r\nclass Button extends Component {\r\n\r\n    static propTypes = {\r\n        clickHandler: PropTypes.func ,\r\n        buttonSize: PropTypes.string ,\r\n        buttonColor: PropTypes.string\r\n    };\r\n\r\n    handleClick = buttonName => {\r\n        this.props.clickHandler(this.props.name);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"button-container\" style={{ width: this.props.buttonSize }}>\r\n                <button className = \"button\" onClick={this.handleClick} style={{ backgroundColor: this.props.buttonColor }}>{this.props.name}</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ButtonPanel.css';\r\nimport Button from './Button.js';\r\n\r\nclass ButtonPanel extends React.Component {\r\n    static propTypes = {\r\n        clickHandler: PropTypes.func,\r\n    }\r\n\r\n    handleClick = buttonName => {\r\n        this.props.clickHandler(buttonName);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"button-panel-component\">\r\n                <div>\r\n                    <Button clickHandler={this.handleClick} buttonSize=\"50%\" buttonColor=\"white\" name=\"AC\" />\r\n                    <Button clickHandler={this.handleClick} buttonSize=\"50%\" buttonColor=\"white\" name=\"=\" />\r\n                </div>\r\n                <div>\r\n                    <Button clickHandler={this.handleClick} buttonSize=\"25%\" buttonColor=\"white\" name=\"7\" />   \r\n                    <Button clickHandler={this.handleClick} buttonSize=\"25%\" buttonColor=\"white\" name=\"8\" />\r\n                    <Button clickHandler={this.handleClick} buttonSize=\"25%\" buttonColor=\"white\" name=\"9\" />\r\n                    <Button clickHandler={this.handleClick} buttonSize=\"25%\" buttonColor=\"orange\" name=\"%\" />\r\n                </div>\r\n                <div>\r\n                    <Button clickHandler={this.handleClick} buttonSize=\"25%\" buttonColor=\"white\" name=\"4\" />   \r\n                    <Button clickHandler={this.handleClick} buttonSize=\"25%\" buttonColor=\"white\" name=\"5\" />\r\n                    <Button clickHandler={this.handleClick} buttonSize=\"25%\" buttonColor=\"white\" name=\"6\" />\r\n                    <Button clickHandler={this.handleClick} buttonSize=\"25%\" buttonColor=\"orange\" name=\"*\" />\r\n                </div>\r\n                <div>\r\n                    <Button clickHandler={this.handleClick} buttonSize=\"25%\" buttonColor=\"white\" name=\"1\" />   \r\n                    <Button clickHandler={this.handleClick} buttonSize=\"25%\" buttonColor=\"white\" name=\"2\" />\r\n                    <Button clickHandler={this.handleClick} buttonSize=\"25%\" buttonColor=\"white\" name=\"3\" />\r\n                    <Button clickHandler={this.handleClick} buttonSize=\"25%\" buttonColor=\"orange\" name=\"+\" />\r\n                </div>\r\n                <div>\r\n                    <Button clickHandler={this.handleClick} buttonSize=\"25%\" buttonColor=\"white\" name=\"0\" />   \r\n                    <Button clickHandler={this.handleClick} buttonSize=\"50%\" buttonColor=\"white\" name=\".\" />\r\n                    <Button clickHandler={this.handleClick} buttonSize=\"25%\" buttonColor=\"orange\" name=\"-\" />\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default ButtonPanel;","var operations = [\"%\", \"*\", \"+\", \"-\"];\r\n\r\nfunction isNumber(item){\r\n    return /[0-9]+/.test(item) ;\r\n}\r\n\r\nfunction calculateValue(item1, item2, operationValue){\r\n\r\n    if(item1[item2.length - 1] === '.') item1+=\"0\";\r\n    var val1 = parseFloat(item1);\r\n    var val2 = parseFloat(item2);\r\n\r\n    if(operationValue === \"+\"){\r\n        val1+=val2;\r\n    }\r\n    else if(operationValue === \"-\"){\r\n        val1-=val2;\r\n    }\r\n    else if(operationValue === \"*\"){\r\n        val1*=val2;\r\n    }\r\n    else if(operationValue === \"%\"){\r\n        if(val2 === 0.0){\r\n            return \"error\";\r\n        }\r\n        else {\r\n            val1/=val2;\r\n        }\r\n    }\r\n\r\n    var finalValue;\r\n    if(Math.floor(val1) === val1){\r\n        finalValue = parseInt(val1).toString();\r\n    }\r\n    else finalValue = val1.toString();\r\n    if(!isNaN(parseFloat(finalValue))) return finalValue;\r\n    return \"error\";\r\n}\r\n\r\nexport default function calculate(obj, buttonName) {\r\n\r\n    if(buttonName === \"AC\"){\r\n        return {\r\n            total: null,\r\n            next: null,\r\n            operation: null\r\n        };\r\n    }\r\n\r\n    if(obj.total === \"error\"){\r\n        return {\r\n            total: null,\r\n            next: null,\r\n            operation: null\r\n        };\r\n    }\r\n\r\n    if(isNumber(buttonName)){\r\n        if(obj.operation){\r\n            if(obj.next) return { next: obj.next+buttonName };\r\n            if(obj.next === \"0\"){\r\n                if(buttonName === \"0\") return {};\r\n            }\r\n            if(obj.next === \"-0\"){\r\n                if(buttonName === \"0\") return {};\r\n                return { next: \"-\"+buttonName };\r\n            }\r\n            return { next: buttonName };\r\n        }\r\n        else{\r\n            if(obj.total) return {total: obj.total+buttonName };\r\n            if(obj.total === \"0\"){\r\n                if(buttonName === \"0\") return {};\r\n            }\r\n            if(obj.total === \"-0\"){\r\n                if(buttonName === \"0\") return {};\r\n                return { total: \"-\"+buttonName };\r\n            }\r\n            return { total: buttonName };\r\n        }        \r\n    }\r\n\r\n    if(buttonName === \".\"){\r\n        if(obj.operation){\r\n            if(obj.next) return { next : obj.next+buttonName };\r\n            return { next : \"0\"+buttonName };\r\n        }\r\n        else{\r\n            if(obj.total) return { total : obj.total+buttonName };\r\n            return { toal : \"0\"+buttonName };\r\n        }\r\n    }\r\n\r\n    if(buttonName === \"=\"){\r\n        if(obj.total && obj.next && obj.operation){\r\n            return {\r\n                total: calculateValue(obj.total, obj.next, obj.operation),\r\n                next: null,\r\n                operation: \"none\"\r\n            };\r\n        }\r\n        return {\r\n            total: null,\r\n            next: null,\r\n            operation: null\r\n        };\r\n    }\r\n\r\n    if(operations.includes(buttonName)){\r\n        if(!obj.total){\r\n            if(buttonName === \"-\") return{ total: buttonName };\r\n            return {};\r\n        }     \r\n        if(!obj.operation || obj.operation === \"none\"){ \r\n            return { operation: buttonName };          \r\n        }\r\n        else{\r\n            if(!obj.next){\r\n                if(buttonName === \"-\") return {next: buttonName};\r\n                return {};\r\n            } \r\n        }\r\n        return {\r\n            total: calculateValue(obj.total, obj.next, obj.operation),\r\n            next: null,\r\n            operation: buttonName\r\n        };\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Display from './Display.js';\r\nimport ButtonPanel from './ButtonPanel.js';\r\nimport calculate from '../logic/calculate.js';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        total: null,\r\n        next: null,\r\n        operation: null\r\n    }\r\n\r\n    handleClick = buttonName => {\r\n        this.setState(calculate(this.state, buttonName));\r\n        console.log(this.state.total, this.state.next, this.state.operation);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div className=\"app-component\">\r\n                    <Display value={this.state.next || this.state.total || \"0\"} />\r\n                    <ButtonPanel clickHandler = {this.handleClick} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport App from './component/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}